import{c as h}from"./chunk-SZOBYU5N.js";import{B as u,E as i,Eb as U,h as a,k as o,m as s,s as c,sb as l,ub as p}from"./chunk-BFXX2XRG.js";var m=class n{constructor(t,e){this.http=t;this.router=e}baseUrl=h.apiUrl;currentUserSource=new a(1);currentUser$=this.currentUserSource.asObservable();loadCurrentUser(t){if(!t)return this.currentUserSource.next(null),o(null);let e=new l().set("Authorization",`Bearer ${t}`);return this.http.get(this.baseUrl+"account",{headers:e}).pipe(s(r=>(r?(localStorage.setItem("token",r.token),this.currentUserSource.next(r)):this.currentUserSource.next(null),r)),c(r=>(console.log(r),this.currentUserSource.next(null),o(null))))}login(t){return this.http.post(this.baseUrl+"account/login",t).pipe(s(e=>{e&&(localStorage.setItem("token",e.token),this.currentUserSource.next(e))}))}register(t){return this.http.post(this.baseUrl+"account/register",t).pipe(s(e=>{e&&(localStorage.setItem("token",e.token),this.currentUserSource.next(e))}))}logout(){localStorage.removeItem("token"),this.currentUserSource.next(null),this.router.navigateByUrl("/")}checkEmailExists(t){return this.http.get(this.baseUrl+"account/emailexists?email="+t)}getUserAddress(){return this.http.get(this.baseUrl+"account/address")}updateUserAddress(t){return this.http.put(this.baseUrl+"account/address",t)}static \u0275fac=function(e){return new(e||n)(i(p),i(U))};static \u0275prov=u({token:n,factory:n.\u0275fac,providedIn:"root"})};export{m as a};
